//
// This file is part of the SPNC project.
// Copyright (c) 2020 Embedded Systems and Applications Group, TU Darmstadt. All rights reserved.
//

#ifndef SPNC_KERNEL_H
#define SPNC_KERNEL_H

#include <optional>
#include <cstdlib>

///
/// Namespace for all entities related to the SPN compiler.
///
namespace spnc {

  ///
  /// Represents a kernel that is generated by the compiler and can be loaded and executed by the runtime.
  /// Contains information about the file-path of the generated kernel and the name of the generated
  /// function inside that file.
  ///
  class Kernel {

  public:

    ///
    /// Constructor.
    /// \param fN The full path to the kernel file (shared object).
    /// \param kN The full name of the toplevel SPN function to be called by the runtime.
    Kernel(const std::string& fN, const std::string& kN) : _fileName{fN}, _kernelName{kN} {
      _unique_id = std::hash<std::string>{}(fN + kN);
    }

    /// Get the full file-path for this Kernel.
    /// \return The full file-path.
    std::string fileName() const { return std::string{_fileName}; }

    /// Get the name of the function to call.
    /// \return Name of the SPN function.
    const std::string& kernelName() const { return _kernelName; }

    /// Get the unique ID of this Kernel used to identify it.
    /// \return An integer value containing a unique ID.
    size_t unique_id() const { return _unique_id; }

  private:

    std::string _fileName;

    std::string _kernelName;

    size_t _unique_id;

  };

}

#endif //SPNC_KERNEL_H
